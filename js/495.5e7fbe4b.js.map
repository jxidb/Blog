{"version":3,"file":"js/495.5e7fbe4b.js","mappings":"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","sources":["webpack://blog/./src/components/Footer/index.vue","webpack://blog/src/components/Footer/index.vue","webpack://blog/./src/components/Footer/index.vue?0239","webpack://blog/./src/components/Footer/index.vue?12f8","webpack://blog/./src/components/Header/index.vue","webpack://blog/src/components/Header/index.vue","webpack://blog/./src/components/Header/index.vue?a4bb","webpack://blog/./src/components/Header/index.vue?d42b","webpack://blog/./src/views/Content/index.vue","webpack://blog/./src/components/Article/index.vue","webpack://blog/./node_modules/marked/lib/marked.esm.js","webpack://blog/src/components/Article/index.vue","webpack://blog/./src/components/Article/index.vue?bc25","webpack://blog/./src/components/Article/index.vue?1492","webpack://blog/src/views/Content/index.vue","webpack://blog/./src/views/Content/index.vue?25d7","webpack://blog/./src/views/Content/index.vue?af2e"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _vm._m(0)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{staticClass:\"container\"},[_c('p',[_vm._v(\"这里是Te98的博客\")]),_c('p',[_vm._v(\"我的邮箱:1193259471@qq.com\")]),_c('p',[_vm._v(\"欢迎大家找我聊天!\")])])])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n      <div class=\"container\">\r\n          <p>这里是Te98的博客</p>\r\n          <p>我的邮箱:1193259471@qq.com</p>\r\n          <p>欢迎大家找我聊天!</p>\r\n      </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'Foo-ter'\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.container{\r\n  // margin-top: -10px;\r\n  box-shadow: 0px 0px 10px 2px rgb(190 190 190);\r\n  text-align: center;\r\n  background-color: #f0f0f0;\r\n  p{\r\n    font-size: 20px;\r\n    padding: 10px 0;\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=ee3ae6b2&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=ee3ae6b2&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ee3ae6b2\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{staticClass:\"main\"},[_c('div',{staticClass:\"header\"},[_c('div',{staticClass:\"left\"},[_c('span',[_c('router-link',{staticStyle:{\"font-size\":\"20px\",\"margin-right\":\"10px\"},attrs:{\"to\":\"/home\"}},[_vm._v(\"blog🐱‍💻\")])],1)]),_c('div',{staticClass:\"right\"},[_c('span',[_c('router-link',{attrs:{\"to\":\"/home\"}},[_vm._v(\"🐱‍🚀主页\")])],1),_c('span',[_vm._v(\"🐱‍👓友链\")]),_vm._m(0)])])])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('a',{staticStyle:{\"text-decoration\":\"none\",\"color\":\"black\"},attrs:{\"href\":\"https://github.com/jxidb\",\"target\":\"_blank\"}},[_c('i',{staticClass:\"iconfont icon-github\",staticStyle:{\"font-size\":\"25px\",\"color\":\"#fff\"}})])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <div class=\"main\">\r\n            <div class=\"header\">\r\n                <div class=\"left\">\r\n                       <span>\r\n                         <router-link to=\"/home\" style=\"  font-size: 20px;\r\n                margin-right: 10px;\">blog🐱‍💻</router-link>\r\n                       </span>\r\n                </div>\r\n\r\n                <div class=\"right\">\r\n                    <span>\r\n                        <router-link to=\"/home\">🐱‍🚀主页</router-link>\r\n\r\n                    </span>\r\n                    <span>🐱‍👓友链</span>\r\n                    <a href=\"https://github.com/jxidb\" target=\"_blank\" style=\"text-decoration: none;\r\n                color: black;\">\r\n                        <i class=\"iconfont icon-github\" style=\"font-size: 25px; color:#fff;\"></i>\r\n                    </a>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'HeaDer',\r\n  methods: {\r\n\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\na{\r\n    text-decoration: none;\r\n    color: #fff;\r\n}\r\n    .header{\r\n        display: flex;\r\n        justify-content: space-between;\r\n        // padding: 10px 50px;\r\n        font-weight: 800;\r\n        color: #fff;\r\n        // background-color: pink;\r\n.left{\r\n    span{\r\n        cursor: pointer;\r\n                display: inline-block;\r\n                text-align: center;\r\n                line-height: 80px;\r\n                font-size: 20px;\r\n            margin-right: 10px;\r\n            height: 80px;\r\n            width: 100px;\r\n            transition: all .5s;\r\n            }\r\n            span:hover{\r\n              background-color: rgb(255 255 255 / 30%);\r\n              transition: all .5s;\r\n\r\n            }\r\n}\r\n         .right{\r\n                a{\r\n                    display: inline-block;\r\n                text-align: center;\r\n                line-height: 80px;\r\n                font-size: 20px;\r\n            // margin-right: 10px;\r\n            height: 80px;\r\n            width: 100px;\r\n            transition: all .5s;\r\n                }\r\n                a:hover{\r\n                     background-color: rgb(255 255 255 / 30%);\r\n              transition: all .5s;\r\n                }\r\n            span{ cursor: pointer;\r\n                display: inline-block;\r\n                text-align: center;\r\n                line-height: 80px;\r\n                font-size: 20px;\r\n            margin-right: 10px;\r\n            height: 80px;\r\n            width: 100px;\r\n            transition: all .5s;\r\n            }\r\n            span:hover{\r\n              background-color: rgb(255 255 255 / 30%);\r\n              transition: all .5s;\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=53e35870&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=53e35870&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"53e35870\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"main\"},[_c('div',{staticClass:\"header\"},[_c('div',{staticClass:\"top\",style:(_vm.style)},[_c('div',{staticClass:\"banner-mask\"},[_c('div',{staticClass:\"Header\"},[_c('Header')],1),_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"con\"},[_c('h1',{staticClass:\"title\"},[_vm._v(\" \"+_vm._s(_vm.title)+\" \")]),_c('p',[_vm._v(_vm._s(_vm.Introduction))])])])])])]),_c('div',{staticClass:\"main-container\"},[_c('div',{staticClass:\"list\"},[_c('div',[_c('Article')],1)]),_c('div',{staticClass:\"footer\"},[_c('Footer')],1)])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{staticClass:\"main\"},[_c('div',{staticClass:\"container markdown-body\"},[_c('div',{directives:[{name:\"highlight\",rawName:\"v-highlight\"}],staticClass:\"markdown-body\",domProps:{\"innerHTML\":_vm._s(_vm.content)}})])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2022, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    async: false,\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = /[&<>\"']/g;\nconst escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nconst escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n/**\n * @param {string} html\n */\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\n\n/**\n * @param {string | RegExp} regex\n * @param {string} opt\n */\nfunction edit(regex, opt) {\n  regex = typeof regex === 'string' ? regex : regex.source;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n/**\n * @param {boolean} sanitize\n * @param {string} base\n * @param {string} href\n */\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n/**\n * @param {string} base\n * @param {string} href\n */\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (cells.length > 0 && !cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param {string} str\n * @param {string} c\n * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\n/**\n * @param {string} pattern\n * @param {number} count\n */\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text)\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw,\n    href,\n    title,\n    text: escape(text)\n  };\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim() : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens: this.lexer.blockTokens(text, []),\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0];\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?: [^\\\\n]*)?(?:\\\\n|$))`);\n          const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n          const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n          const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            line = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(line)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(line)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(line)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(src)) {\n              break;\n            }\n\n            if (line.search(/[^ ]/) >= indent || !line.trim()) { // Dedent if possible\n              itemContents += '\\n' + line.slice(indent);\n            } else if (!blankLine) { // Until blank line, item doesn't need indentation\n              itemContents += '\\n' + line;\n            } else { // Otherwise, improper indentation ends this item\n              break;\n            }\n\n            if (!blankLine && !line.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n        const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n        const hasMultipleLineBreaks = spacers.every(t => {\n          const chars = t.raw.split('');\n          let lineBreaks = 0;\n          for (const char of chars) {\n            if (char === '\\n') {\n              lineBreaks += 1;\n            }\n            if (lineBreaks > 1) {\n              return true;\n            }\n          }\n\n          return false;\n        });\n\n        if (!list.loose && spacers.length && hasMultipleLineBreaks) {\n          // Having a single line break doesn't mean a list is loose. A single line break is terminating the last list item\n          list.loose = true;\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        const text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.type = 'paragraph';\n        token.text = text;\n        token.tokens = this.lexer.inline(text);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href: cap[2],\n        title: cap[3]\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = this.lexer.inline(item.header[j].text);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = this.lexer.inline(row[k].text);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1])\n      };\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n        ? cap[1].slice(0, -1)\n        : cap[1];\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0])\n      };\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link || !link.href) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = src.slice(1, lLength + match.index + rLength);\n          return {\n            type: 'em',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = src.slice(2, lLength + match.index + rLength - 1);\n        return {\n          type: 'strong',\n          raw: src.slice(0, lLength + match.index + rLength + 1),\n          text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?<?([^\\s>]+)>?(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n});\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n  nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //          () Skip orphan inside strong  () Consume to delim (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^[^_*]*?\\_\\_[^_*]*?\\*[^_*]*?(?=\\_\\_)|[^*]+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?\\_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\ninline.escapedEmSt = /\\\\\\*|\\\\_/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.nolink = edit(inline.nolink)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\n/**\n * smartypants text replacement\n * @param {string} text\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n * @param {string} text\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n    } else {\n      src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n        return leading + '    '.repeat(tabs.length);\n      });\n    }\n\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens = []) {\n    this.inlineQueue.push({ src, tokens });\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang, true)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  /**\n   * @param {string} quote\n   */\n  blockquote(quote) {\n    return `<blockquote>\\n${quote}</blockquote>\\n`;\n  }\n\n  html(html) {\n    return html;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} level\n   * @param {string} raw\n   * @param {any} slugger\n   */\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      const id = this.options.headerPrefix + slugger.slug(raw);\n      return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n    }\n\n    // ignore IDs\n    return `<h${level}>${text}</h${level}>\\n`;\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  /**\n   * @param {string} text\n   */\n  listitem(text) {\n    return `<li>${text}</li>\\n`;\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  /**\n   * @param {string} text\n   */\n  paragraph(text) {\n    return `<p>${text}</p>\\n`;\n  }\n\n  /**\n   * @param {string} header\n   * @param {string} body\n   */\n  table(header, body) {\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  /**\n   * @param {string} content\n   */\n  tablerow(content) {\n    return `<tr>\\n${content}</tr>\\n`;\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? `<${type} align=\"${flags.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n\n  /**\n   * span level renderer\n   * @param {string} text\n   */\n  strong(text) {\n    return `<strong>${text}</strong>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  em(text) {\n    return `<em>${text}</em>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  codespan(text) {\n    return `<code>${text}</code>`;\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  /**\n   * @param {string} text\n   */\n  del(text) {\n    return `<del>${text}</del>`;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + escape(href) + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${title}\"`;\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * @param {string} value\n   */\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   * @param {string} originalSlug\n   * @param {boolean} isDryRun\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} [options]\n   * @param {boolean} [options.dryrun] Generates the next unique slug without\n   * updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (typeof opt === 'function') {\n    callback = opt;\n    opt = null;\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  if (callback) {\n    const highlight = opt.highlight;\n    let tokens;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    const done = function(err) {\n      let out;\n\n      if (!err) {\n        try {\n          if (opt.walkTokens) {\n            marked.walkTokens(tokens, opt.walkTokens);\n          }\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!tokens.length) return done();\n\n    let pending = 0;\n    marked.walkTokens(tokens, function(token) {\n      if (token.type === 'code') {\n        pending++;\n        setTimeout(() => {\n          highlight(token.text, token.lang, function(err, code) {\n            if (err) {\n              return done(err);\n            }\n            if (code != null && code !== token.text) {\n              token.text = code;\n              token.escaped = true;\n            }\n\n            pending--;\n            if (pending === 0) {\n              done();\n            }\n          });\n        }, 0);\n      }\n    });\n\n    if (pending === 0) {\n      done();\n    }\n\n    return;\n  }\n\n  function onError(e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n\n  try {\n    const tokens = Lexer.lex(src, opt);\n    if (opt.walkTokens) {\n      if (opt.async) {\n        return Promise.all(marked.walkTokens(tokens, opt.walkTokens))\n          .then(() => {\n            return Parser.parse(tokens, opt);\n          })\n          .catch(onError);\n      }\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parse(tokens, opt);\n  } catch (e) {\n    onError(e);\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const opts = merge({}, ...args);\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n  let hasExtensions;\n\n  args.forEach((pack) => {\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      hasExtensions = true;\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        let values = [];\n        values.push(pack.walkTokens.call(this, token));\n        if (walkTokens) {\n          values = values.concat(walkTokens.call(this, token));\n        }\n        return values;\n      };\n    }\n\n    if (hasExtensions) {\n      opts.extensions = extensions;\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  let values = [];\n  for (const token of tokens) {\n    values = values.concat(callback.call(marked, token));\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          values = values.concat(marked.walkTokens(cell.tokens, callback));\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            values = values.concat(marked.walkTokens(cell.tokens, callback));\n          }\n        }\n        break;\n      }\n      case 'list': {\n        values = values.concat(marked.walkTokens(token.items, callback));\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            values = values.concat(marked.walkTokens(token[childTokens], callback));\n          });\n        } else if (token.tokens) {\n          values = values.concat(marked.walkTokens(token.tokens, callback));\n        }\n      }\n    }\n  }\n  return values;\n};\n\n/**\n * Parse Inline\n * @param {string} src\n */\nmarked.parseInline = function(src, opt) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked.parseInline(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked.parseInline(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  try {\n    const tokens = Lexer.lexInline(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parseInline(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n};\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n","<template >\r\n  <div>\r\n      <div class=\"main\">\r\n        <div class=\"container  markdown-body\"  >\r\n            <!-- <img :src=\"src\" alt=\"\"> -->\r\n            <!-- {{content}} -->\r\n            <!-- <textarea v-model=\"md\" @change=\"Change\" name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea> -->\r\n\r\n      <!-- <textarea name=\"md\" v-model=\"md\" @change=\"Change\" class=\"md\" cols=\"30\" rows=\"10\"></textarea> -->\r\n          <div v-highlight v-html=\"content\" class=\"markdown-body\">\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { marked } from 'marked'\r\n\r\n// import 'highlight.js/styles/dark.css'\r\nexport default {\r\n  name: 'ArtIcle',\r\n  data () {\r\n    return {\r\n      content: '',\r\n      Md: null\r\n    }\r\n  },\r\n  props: {\r\n    src: {\r\n      type: String\r\n    }\r\n  },\r\n  mounted () {\r\n    // console.log(Md)\r\n    this.Md = this.$store.state.Content.Md\r\n    console.log(this.Md)\r\n    this.content = marked(this.Md.default || this.Md)\r\n  },\r\n  methods: {\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n\r\nimg{\r\n    width: 820px;\r\n  }\r\n.main{\r\n  background-color: #fff;\r\n\r\n  max-width: 930px;\r\n  // height: 285px;\r\n  margin:0 auto;\r\n  margin-bottom: 50px;\r\n\r\n  .container{\r\n    padding: 0 50px;\r\n     height: 100%;\r\n    box-shadow: 0px 2px 10px  rgb(190 190 190);\r\n    letter-spacing: 2px;\r\n    // display: flex;\r\n    // justify-content: space-between;\r\n    .md{\r\n      outline: none;\r\n    }\r\n  }\r\n.markdown-body{\r\n  max-width: 100%;\r\n   padding-top: 50px;\r\n   padding-bottom: 50px;\r\n   /deep/ p{\r\n  margin: 10px 0;\r\n}\r\n\r\n/deep/ li{\r\n  margin: 10px 0;\r\n}\r\n\r\n/deep/ h1,h2,h3,h4,h5,h6{\r\n  margin-bottom: 10px;\r\n}\r\n}\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=88809e86&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=88809e86&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"88809e86\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div class=\"main\">\r\n    <div class=\"header\">\r\n\r\n      <div class=\"top\" :style=\"style\">\r\n\r\n        <div class=\"banner-mask\">\r\n          <div class=\"Header\">\r\n            <Header></Header>\r\n          </div>\r\n          <div class=\"container\">\r\n            <div class=\"con\">\r\n              <h1 class=\"title\">\r\n                {{title}}\r\n              </h1>\r\n              <p>{{Introduction}}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n    <div class=\"main-container\">\r\n        <div  class=\"list\">\r\n          <div>\r\n           <Article></Article>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"footer\">\r\n              <Footer></Footer>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport Header from '@/components/Header'\r\nimport Article from '@/components/Article/index.vue'\r\nimport Footer from '@/components/Footer/index.vue'\r\nexport default {\r\n  name: 'Ho-me',\r\n  data () {\r\n    return {\r\n      src: '',\r\n      title: '',\r\n      Introduction: '',\r\n      content: ''\r\n    }\r\n  },\r\n  components: {\r\n    Header,\r\n    Article,\r\n    Footer\r\n  },\r\n  created () {\r\n    this.src = this.$store.state.Content.src || sessionStorage.getItem('src')\r\n    this.title = this.$store.state.Content.title || sessionStorage.getItem('title')\r\n    this.Introduction = this.$store.state.Content.Introduction || sessionStorage.getItem('Introduction')\r\n    document.documentElement.scrollTo({\r\n      left: 0,\r\n      top: 0,\r\n      behavior: 'smooth'\r\n    })\r\n  },\r\n  computed: {\r\n    style () {\r\n      return { 'background-image': `url(${this.src})` }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.main{\r\n  background-color: #fff;\r\n}\r\n.banner-mask {\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(30, 30, 30, 0.25);\r\n  z-index: 1;\r\n  color: #fff;\r\n  .container {\r\n    display: flex;\r\n    justify-content: center;\r\n    position: relative;\r\n    .con {\r\n      position: absolute;\r\n      top: 30vh;\r\n      left: 250px;\r\n\r\n      .title {\r\n        color: #fff;\r\n        margin-bottom: 10px;\r\n      }\r\n    }\r\n  }\r\n  .Header {\r\n    padding: 0px 100px;\r\n    z-index: -1;\r\n  }\r\n}\r\n.top {\r\n  height: 100vh;\r\n  background: url('https://www.bing.com/th?id=OHR.LacChesserys_ZH-CN4136691056_1920x1080.jpg&rf=LaDigue_1920x1080.jpg&pid=hp') no-repeat;\r\n  // background-position: 50% 50%;\r\n  // background-size: 100% 100%;\r\n  background-size: cover;\r\n  image-rendering: -webkit-optimize-contrast;\r\n}\r\n\r\n.list{\r\n  // height: 100%;\r\nmargin-top: -50px;\r\n}\r\n.bgc {\r\n  height: 100vh;\r\n  background: no-repeat;\r\n  background-size: cover;\r\n  image-rendering: -webkit-optimize-contrast;\r\n\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=38cfd017&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=38cfd017&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"38cfd017\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_self","_c","_m","staticRenderFns","staticClass","_v","name","component","staticStyle","attrs","methods","style","_s","title","Introduction","directives","rawName","domProps","content","getDefaults","async","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartypants","tokenizer","walkTokens","xhtml","defaults","changeDefaults","newDefaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","html","encode","test","replace","unescapeTest","unescape","_","n","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","edit","regex","opt","source","obj","val","getRegex","RegExp","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","href","prot","decodeURIComponent","e","indexOf","resolveUrl","encodeURI","baseUrls","justDomain","protocol","domain","rtrim","relativeBase","noopTest","exec","merge","target","key","i","arguments","length","Object","prototype","hasOwnProperty","call","splitCells","tableRow","count","row","match","offset","str","escaped","curr","cells","split","trim","shift","pop","splice","push","c","invert","l","suffLen","currChar","slice","findClosingBracket","b","level","checkSanitizeDeprecation","console","warn","repeatString","pattern","result","outputLink","cap","link","raw","lexer","text","state","inLink","token","type","tokens","inlineTokens","indentCodeCompensation","matchIndentToCode","indentToCode","map","node","matchIndentInNode","indentInNode","join","Tokenizer","constructor","options","space","src","rules","block","newline","code","codeBlockStyle","fences","lang","heading","trimmed","depth","inline","hr","blockquote","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","start","loose","items","itemRegex","trimLeft","search","nextBulletRegex","Math","min","hrRegex","fencesBeginRegex","headingBeginRegex","task","checked","trimRight","top","spacers","filter","t","hasMultipleLineBreaks","every","chars","lineBreaks","char","pre","def","tag","table","item","header","align","rows","j","k","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","_escapes","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","index","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","out","charCodeAt","random","toString","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Lexer","create","inlineQueue","lex","next","lastToken","cutSrc","lastParagraphClipped","leading","tabs","repeat","some","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","forEach","getStartIndex","errMsg","error","Error","keepPrevChar","keys","includes","lastIndexOf","startInline","Renderer","infostring","quote","slugger","id","slug","body","startatt","listitem","checkbox","tablerow","tablecell","flags","image","TextRenderer","Slugger","seen","serialize","value","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Parser","textRenderer","parser","parse","parseInline","l2","l3","cell","itemBody","ret","renderers","unshift","marked","callback","done","err","pending","setTimeout","onError","message","Promise","all","then","catch","setOptions","use","args","opts","childTokens","hasExtensions","pack","ext","prevRenderer","apply","prop","prevTokenizer","values","concat","lexInline","data","Md","props","mounted","components","Header","Article","Footer","created","document","left","behavior","computed"],"sourceRoot":""}